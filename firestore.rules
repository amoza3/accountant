rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Global helper function to check if a user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document.
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Helper function to check if the user is a superadmin by reading their own profile.
    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Rules for all subcollections within a user's document (e.g., products, sales, etc.)
    // Users can only read and write to their own subcollections.
    match /users/{userId}/{documents=**} {
      allow read, write: if isOwner(userId);
    }
    
    // Rules for the 'users' collection itself.
    match /users/{document} {
      // Allow any authenticated user to create their own user profile document.
      // The document ID must match their own UID.
      allow create: if isSignedIn() && request.resource.id == request.auth.uid;
      
      // Allow a user to read their own profile.
      allow get: if isOwner(document);

      // Allow a user to update their own profile.
      allow update: if isOwner(document);

      // Only superadmins can delete profiles (for future implementation).
      allow delete: if isSuperAdmin();

      // **CRITICAL FIX**: Only a superadmin can list all user documents.
      allow list: if isSuperAdmin();
    }
  }
}
